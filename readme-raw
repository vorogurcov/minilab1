- Установить NodeJS
  - ВАЖНО: при установке включить или не отключать функцию добавления пути к nodeJS в PATH.
  Иначе, добавить путь вручную (гугл в помощь).


Что узнаем:
1. Менеджер пакетов JS: как устанавливать зависимости для проектов => работа со сборкой и деплоем проектов на JS
2. Основной синтаксис JS: стрелочные функции, экспортирование объектов, функциональный стиль, модификация DOM дерева, селекторы => продвинутые возможности JS, вход во фреймворки (ReactJS)
3. Верстка: устройство HTML страницы, импорт из CDN => понимание концепции HTML, умение дебажить элементы и верстать страницы снуля
4. Интсрументы: пнаель разработчика в браузере, изменение стилей, консоль => умение дебажить фронтенд код, быстрый просмотр стилей, умение сдавать курсы на openEdu без прохождения тестов


Документация библиотеки стилей: https://materializecss.com/
Best practices: https://uxplanet.org/12-best-practies-for-sign-up-and-login-page-design-69d6cd045cf


1. Установить менеджер пакетов (NodeJS) (20 минут +) (инфраструктура)
2. Склонировать проект (git clone...) (5 минут +) (инфраструктура, git)
3. Установить зависимости (npm install) (5 минут +) (инфраструктура)
4. Реализовать валидацию пароля на JS (требования валидации собственные на усмотрение студента) Будет пример валидации почты (JS)

5. Реализовать форму авторизации по аналогии с формой регистрации ГДЕ И КАК И ЧТО РЕАЛИЗОВАТЬ. (HTML+CSS)
ССЫЛКА НА МЕСТО В КОДЕ (на усмотрение студента)
6. Блокировать кнопку регистрации/авторизации пока все поля не станут валидными (JS+HTML)
Указание: используйте функцию getValidationStatus. Если какое-то поле поменялось - оно может перестать быть валидным.
Хороший тон сразу уведомить об этом пользователя, а не после нажатия на кнопку отправки формы

7*. Адаптировать форму для телефонов, другие изменения в стилях и верстке (CSS)


Добавить конфиг и реквест для получения ответа об авторизации/регистрации

* Почему скрипт main.js нужно импортировтаь в HTML в конце?
